// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UsuariosCRUD.Data;

namespace UsuariosCRUD.Migrations
{
    [DbContext(typeof(UsuariosContext))]
    partial class UsuariosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113");

            modelBuilder.Entity("UsuariosCRUD.Models.TokenUsuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ExpiraEm");

                    b.Property<string>("Token");

                    b.HasKey("Id");

                    b.ToTable("TokenUsuarios");
                });

            modelBuilder.Entity("UsuariosCRUD.Models.TrocaDeSenha", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataSolicitacao");

                    b.Property<bool>("SolicitacaoAtiva");

                    b.Property<long>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TrocaDeSenhas");
                });

            modelBuilder.Entity("UsuariosCRUD.Models.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("NomeUsuario");

                    b.Property<string>("PrimeiroNome");

                    b.Property<string>("Senha");

                    b.Property<string>("UltimoNome");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("UsuariosCRUD.Models.TrocaDeSenha", b =>
                {
                    b.HasOne("UsuariosCRUD.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
